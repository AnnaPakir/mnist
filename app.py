# -*- coding: utf-8 -*-
"""mnist_model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SYSYvICwj9Zxz2kkEOGkgosmPF-vbrlA
"""

# загрузим необходимые библиотеки
import sympy as sp
from sympy.parsing.sympy_parser import parse_expr
import matplotlib.pyplot as plt
import numpy as np

import cv2
import os
import random
import matplotlib.image as mpimg
import pickle
from PIL import Image

from keras.utils import to_categorical
from keras.models import Sequential
from keras.layers import Dense,Input
from keras.models import load_model

import gradio as gr

# загружаем модель
model = load_model('my_model.keras')

def preprocess_image(image):
    """
    Предобработка изображения:

    """
    alpha_channel = image[:, :, 3]
    image = Image.fromarray(alpha_channel)
    image = image.resize((28, 28))
    image = np.array(image)
    image = image / 255.0
    image = image.reshape(1, 784)
    return image

def predict_number(image):
    """
    Функция для предсказания числа
    """
    try:
        image = image["composite"]
        preprocessed_image = preprocess_image(image)
        predictions = model.predict(preprocessed_image)
        predicted_class = np.argmax(predictions)
        probabilities = {str(i): round(float(predictions[0][i]) * 100, 2) for i in range(10)}
        probabilities_text = "\n".join([f"Класс {i}: {probabilities[str(i)]}%" for i in range(10)])
        return f"Предсказанное число: {predicted_class}\n\nВероятности:\n{probabilities_text}"

    except Exception as e:
        return f"Ошибка: {str(e)}"


interface = gr.Interface(
    fn=predict_number,
    inputs=gr.Sketchpad(label="Нарисуйте число", canvas_size=(400, 400)),
    outputs="text"
)

interface.launch(debug=True)